name: Publish a package to NPM

on:
  workflow_dispatch:
    inputs:
      shouldUpdateVersion:
        required: true
        type: choice
        description: Update the version?
        default: naa
        options:
          - haa
          - naa
          - maybe
      shouldGitTag:
        required: true
        type: choice
        description: Create a tag commit?
        default: naa
        options:
          - haa
          - naa
          - maybe
      shouldPublishToNPM:
        required: true
        type: choice
        description: Publish to NPM
        default: naa
        options:
          - haa
          - naa
          - maybe
      newVersion:
        required: true
        description: Specify the new version (if not updating, specify the current one)

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build:packages

      - name: Config git metadata
        run: |
          git config --global user.name 'Vighnesh Raut'
          git config --global user.email 'me@vighnesh153.com'

      - name: Update the version in the packages
        if: ${{ inputs.shouldUpdateVersion == 'haa' }}
        run: |
          npm run version-update -- ${{ inputs.newVersion }}
          git add .
          git commit -m "build: update the npm version to ${{ inputs.newVersion }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a git tag and push
        if: ${{ inputs.shouldGitTag == 'haa' }}
        run: |
          git tag v${{ inputs.newVersion }}
          git push --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish the package
        if: ${{ inputs.shouldPublishToNPM == 'haa' }}
        run: |
          npm run overrideConfigWhilePublishing
          npm run removePrivatePackagesBeforePublishing
          npm publish --workspace=packages
        env:
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
