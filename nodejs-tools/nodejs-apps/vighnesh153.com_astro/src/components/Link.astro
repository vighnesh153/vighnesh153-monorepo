---
import type { HTMLAttributes } from 'astro/types';

export interface Props extends HTMLAttributes<'a'> {
  asPrimaryButton?: boolean;
  asSecondaryButton?: boolean;
}

const {
  asPrimaryButton = false,
  asSecondaryButton = false,
  'class:list': classList,
  class: className,
  ...props
} = Astro.props;

if (asPrimaryButton && asSecondaryButton) {
  throw new Error('Cannot be both primary and secondary button at the same time');
}
---

<a
  class:list={[
    className,
    classList,
    'LinkComponent',
    { 'primary-button': asPrimaryButton, 'secondary-button': asSecondaryButton },
  ]}
  {...props}
>
  <slot />
</a>

<style lang="scss" is:global>
  @import '@/styles/button.scss';

  a.LinkComponent {
    display: inline-block;

    color: var(--primary);
    font-weight: var(--font-weight-bold);

    text-decoration: underline;
    cursor: pointer;

    &:is(:hover, :focus-visible) {
      color: var(--accent);
    }

    &.primary-button {
      @include button;
      @include button-primary;
      text-decoration: none;
    }

    &.secondary-button {
      @include button;
      @include button-secondary;
      text-decoration: none;
    }
  }
</style>
