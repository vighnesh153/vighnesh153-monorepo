---
import type { HTMLAttributes } from 'astro/types';

export interface Props extends HTMLAttributes<'a'> {
  asPrimaryButton?: boolean;
  asSecondaryButton?: boolean;
}

const {
  asPrimaryButton = false,
  asSecondaryButton = false,
  'class:list': classList,
  class: className,
  ...props
} = Astro.props;

if (asPrimaryButton && asSecondaryButton) {
  throw new Error('Cannot be both primary and secondary button at the same time');
}
---

<a
  class:list={[
    className,
    classList,
    'LinkComponent',
    {
      'regular-link': !asPrimaryButton && !asSecondaryButton,
      'primary-button': asPrimaryButton,
      'secondary-button': asSecondaryButton,
    },
  ]}
  {...props}
>
  <slot />
</a>

<style lang="scss">
  @import '@/styles/button.scss';

  a.LinkComponent {
    &.regular-link {
      display: inline-block;
      position: relative;

      color: var(--accent);
      font-weight: var(--font-weight-regular);

      text-decoration: none;
      cursor: pointer;

      &::after {
        $size: 2px;
        content: '';

        position: absolute;
        width: 0;
        height: $size;

        left: 0;
        bottom: -$size;

        background-color: currentColor;

        transition: width var(--ease-in) var(--duration-shorter);
      }

      &:is(:hover, :focus-visible) {
        &::after {
          width: 100%;
        }
      }
    }

    &.primary-button {
      @include button;
      @include button-primary;
      text-decoration: none;
    }

    &.secondary-button {
      @include button;
      @include button-secondary;
      text-decoration: none;
    }
  }
</style>
