---
import RvLogoIcon from '@/icons/RvLogoIcon.astro';
import { externalLinks, internalLinks } from '@/constants';
import FocusDashedOutline from '../FocusDashedOutline.astro';
import Link from '../Link.astro';
import Span from '../typography/span.astro';

const navItems = [
  { text: 'About', link: internalLinks.homePage.aboutMe },
  { text: 'Blog', link: externalLinks.blog },
  { text: 'Projects', link: internalLinks.projects },
  { text: 'Experience', link: internalLinks.homePage.experience },
  { text: 'Contact', link: internalLinks.homePage.contactMe },
  { text: 'Resume', link: externalLinks.resume },
];
---

<header id="header" class="show-header">
  <FocusDashedOutline>
    <a href="/" aria-label="Logo" class="logo">
      <RvLogoIcon width="2.5rem" height="2.5rem" style={{ fontSize: 0 }} />
    </a>
  </FocusDashedOutline>
  <FocusDashedOutline>
    <nav>
      {
        navItems.map((navItem) => (
          <Link href={navItem.link}>
            <Span variant="h6">{navItem.text}</Span>
          </Link>
        ))
      }
    </nav>
  </FocusDashedOutline>
</header>

<style lang="scss">
  @import '@/styles/breakpoints-media.css';
  @import '@/styles/typography.scss';

  header {
    padding: 1.5rem;
    width: 100%;
    position: fixed;
    translate: 0 -100%;

    display: flex;
    align-items: center;
    justify-content: space-between;

    background-color: var(--background);
    z-index: var(--z-index-app-bar);

    transition: box-shadow var(--duration-standard) var(--ease-out),
      translate var(--duration-complex) var(--ease-in-out);

    &.box-shadow {
      box-shadow: 0 10px 30px -10px var(--background-dark);
    }

    &.show-header {
      translate: 0 0;
    }
  }

  .logo {
    display: inline-block;

    color: var(--accent);
  }

  nav {
    display: none;
    gap: 1rem;

    @media (--md-and-up) {
      display: flex;
    }
  }
</style>

<script>
  const header = document.querySelector('#header');
  const boxShadowScrollYOffset = 70;
  const showHeaderOffset = 200;
  let previousScrollY = 0;

  window.addEventListener('scroll', (e) => {
    const currentScrollY = window.scrollY;
    header?.classList.toggle('box-shadow', currentScrollY >= boxShadowScrollYOffset);
    header?.classList.toggle('show-header', currentScrollY <= showHeaderOffset || currentScrollY < previousScrollY);
    previousScrollY = currentScrollY;
  });
</script>
