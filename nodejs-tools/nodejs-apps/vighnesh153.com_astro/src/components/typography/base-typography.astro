---
import type { HTMLAttributes } from 'astro/types';

type ElementType = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'p' | 'span';

// prettier-ignore-start
// eslint-disable-next-line max-len
export type TypographyVariant =
| 'h1'
| 'h2'
| 'h3'
| 'h4'
| 'h5'
| 'h6'
| 'subtitle1'
| 'subtitle2'
| 'body1'
| 'body2'
| 'button'
| 'caption'
| 'overline'
| 'inherit';
// prettier-ignore-end

export interface Props<T extends ElementType> {
  element: T;
  variant: TypographyVariant;
  htmlProps: HTMLAttributes<T>;
}

const { element: Element, variant, htmlProps } = Astro.props;
const { class: className, 'class:list': classList = [], ...props } = htmlProps;
---

<Element class:list={[variant, className, classList]} {...props}>
  <slot />
</Element>
